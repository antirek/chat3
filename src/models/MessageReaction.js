import mongoose from 'mongoose';

const messageReactionSchema = new mongoose.Schema({
  tenantId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Tenant',
    required: true,
    index: true
  },
  messageId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Message',
    required: true,
    index: true
  },
  userId: {
    type: String,
    required: true,
    description: 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞–≤–∏–ª —Ä–µ–∞–∫—Ü–∏—é'
  },
  reaction: {
    type: String,
    required: true,
    description: '–¢–∏–ø —Ä–µ–∞–∫—Ü–∏–∏: —ç–º–æ–¥–∑–∏ (üëç, ‚ù§Ô∏è, üòÇ) –∏–ª–∏ —Ç–µ–∫—Å—Ç (custom:text)'
  },
  createdAt: {
    type: Date,
    default: Date.now
  },
  updatedAt: {
    type: Date,
    default: Date.now
  }
}, {
  timestamps: true
});

// –°–æ—Å—Ç–∞–≤–Ω–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å: –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
messageReactionSchema.index({ tenantId: 1, messageId: 1, userId: 1 }, { unique: true });

// –ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–∞–∫—Ü–∏–π –ø–æ —Ç–∏–ø—É
messageReactionSchema.index({ tenantId: 1, messageId: 1, reaction: 1 });

// –ò–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
messageReactionSchema.index({ tenantId: 1, messageId: 1, createdAt: -1 });

// –ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
messageReactionSchema.index({ tenantId: 1, userId: 1, createdAt: -1 });

const MessageReaction = mongoose.model('MessageReaction', messageReactionSchema);

export default MessageReaction;

